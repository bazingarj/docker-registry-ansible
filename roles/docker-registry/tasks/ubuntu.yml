---
# tasks file for docker-registry
- name: Install aptitude
  become: true
  apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Install required system packages
  become: true
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - acl
    state: latest
    update_cache: true

- name: Add Docker GPG apt Key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu jammy stable
    state: present

- name: Update apt and install docker-ce
  become: true
  apt:
    name: "{{ item  }}"
    state: latest
    update_cache: true
  with_items:
    - "docker-ce"
    - "docker-compose"
    - "docker"

- name: "Ensure docker service is started and enabled"
  become: true
  service:  
    name: docker
    state: started
    enabled: true

- name: Create group
  become: true
  group:
    name: "{{ group }}"
    state: present

- name: Create user
  become: true
  ansible.builtin.user:
    name: "{{ user }}"
    uid: 1040
    group: "{{ group }}"

- name: Creates home directory
  become: true
  file:
    path: "/home/{{ user }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0744'

- name: "Create Dirs"
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - "{{ registry_path }}"
    - "{{ registry_data }}"

- name: "Copy docker compose file"
  become: true
  template:
    src: "./templates/docker-compose.yaml.j2"
    dest: "{{ registry_path }}/docker-compose.yaml"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644

- name: "start docker compose"
  become: true
  become_user: "{{ user }}"
  shell: docker-compose up -d
  args:
    chdir: "{{ registry_path }}"

- name: "get docker containers"
  become: true
  become_user: "{{ user }}"
  shell: docker ps -a

# check if docker-registry port is listening
- name: Check if docker-registry is listening on port 5000
  ansible.builtin.wait_for: 
    port: 5000
    state: started
    timeout: 30

  
